int cambien1 = A0;   // moi lan cam bien lai tang bo dem len 1, sau khi cam bien xong thi dong role theo so tg da cai dat truoc
int out1 = A5;   //output ra relay
/*
bình thường cambien1 chưa bị che thì mạch ko chạy, sau khi bị che bộ đếm sẽ tăng 1, sau đó cambien1 ko bị che nữa thì đóng relay theo số time
đã cài đặt tính bằng giây.
nút nhấn: nút 1 _ giữ 3s reset bộ đếm
nút 2 _ cài đặt thời gian đóng relay tính bằng s
nút 3 _ tăng time
nút 4 _ giảm time
*/
#define BAT HIGH
#define TAT LOW

int latchPin = 6;//ST_CP
int clockPin = 7;//SH_CP 
int dataPin = 5; //DS 
int reset_button = 12;
int down_button = 13;
int up_button = 0;
int setup_button = 1; 

boolean count_flag = false;
boolean reset_flag = false;
boolean setup_status = false;
int threshold = 0;
int reset_button_status, down, up, setup;
void setup ()
{
pinMode(latchPin,OUTPUT);
pinMode(clockPin,OUTPUT);
pinMode(dataPin,OUTPUT);
pinMode(out1, OUTPUT); 
pinMode(reset_button, INPUT_PULLUP);
pinMode(down_button, INPUT_PULLUP);
pinMode(up_button, INPUT_PULLUP);
pinMode(setup_button, INPUT_PULLUP);
pinMode(cambien1, INPUT_PULLUP);
}
 
void displayNum(int Num_Dis, int Num_Pos, int Num_Dec) //  displayNum(number, pos, decimal(if not))
{
int Num_Dis_B = 0;
int Num_Pos_B = 0;
switch (Num_Dis) // convert to binary 
{
case 0:Num_Dis_B = 192;break;
case 1:Num_Dis_B = 249;break;
case 2:Num_Dis_B = 164;break;
case 3:Num_Dis_B = 176;break;
case 4:Num_Dis_B = 153;break;
case 5:Num_Dis_B = 146;break;
case 6:Num_Dis_B = 130;break;
case 7:Num_Dis_B = 248;break;
case 8:Num_Dis_B = 128;break;
case 9:Num_Dis_B = 144;break;
default: Num_Dis_B = 255;break;
};

switch (Num_Pos)
{
case 1:Num_Pos_B = 1;break;
case 2:Num_Pos_B = 2;break;
case 3:Num_Pos_B = 4;break;
case 4:Num_Pos_B = 8;break;
case 5:Num_Pos_B = 16;break;
case 6:Num_Pos_B = 32;break;
case 7:Num_Pos_B = 64;break;
case 8:Num_Pos_B = 128;break;
default: Num_Pos_B = 0;break;
};

if (Num_Dec == 1)
{
Num_Dis_B = Num_Dis_B + 128;
};
//========================================
digitalWrite(latchPin,LOW); 

int L = Num_Dis_B; int R = Num_Pos_B;
shiftOut(dataPin,clockPin,MSBFIRST,R);
shiftOut(dataPin,clockPin,MSBFIRST,L);
digitalWrite(latchPin,HIGH); 
//========================================
delayMicroseconds(100);
}
void showNum(int number)

{

int ShowNumber[4];
ShowNumber[4] = (number/1000)%10;
ShowNumber[3] = (number/100)%10;
ShowNumber[2] = (number/10)%10;
ShowNumber[1]= (number/1)%10;
 
displayNum(ShowNumber[1],1,0);
displayNum(ShowNumber[2],2,0);
displayNum(ShowNumber[3],3,0);
displayNum(ShowNumber[4],4,0);

}
void delay_timer(int numb){
    int number[3];
    number[1] = (numb/1)%10;
    number[2] = (numb/10)%10;
    number[3] = (numb/100)%100;
    displayNum(number[1], 5, 0);
    displayNum(number[2], 6, 0);
    displayNum(number[3], 7, 0);
}
void loop()
{   
    unsigned int delay_time = 10; // timer mac dinh
    unsigned int counter = 0;
    unsigned int setting;
    int value = analogRead(cambien1);
    reset_button_status = digitalRead(reset_button);
    up = digitalRead(up_button);
    down = digitalRead(down_button);
    setup = digitalRead(setup_button);
    if(reset_button_status == LOW){
        delay(1500);
        reset_flag = true;
        showNum(0);
    }
    if(reset_button_status == HIGH)
    reset_flag = false;
    if(reset_button_status == LOW){
     setting = 0;
     delay(10);
     if(reset_button_status == HIGH) {
         setting = setting + 1;
     }
     if(setting = 1){
        delay_timer(0); // reset lai timer, cho phep edit timer
        if(up == LOW){
        delay(10);
        if(up == HIGH){
            delay_time = delay_time + 1;
        }
    }
    if(down == LOW){
        delay(10);
        if(down == HIGH){
            delay_time = delay_time - 1;     
        }
    }
    delay_timer(delay_time);
     }
    if(setting = 2){
        delay_timer(delay_time);
        setting = 0;
    }  
    
    if(value > threshold){ // co san pham
        count_flag = true;
    }
    if(count_flag == true){
       counter = counter + 1;
        showNum(counter);

    }
    if(value < threshold){ // khong co san pham
    count_flag = false;
    digitalWrite(out1, BAT);
    delay(delay_time);
    }

}

